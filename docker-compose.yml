name: jirafy

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE:-jirafy}
      POSTGRES_USER: ${DB_USERNAME:-jirafy_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mot_de_passe_securise_123}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - jirafy-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-jirafy_user} -d ${DB_DATABASE:-jirafy}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    env_file:
      - ./api/.env.production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - jirafy-network
    volumes:
      - ./api/storage:/var/www/html/storage
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        /usr/local/bin/wait-for-db.sh &&
        echo 'Running migrations...' &&
        php artisan migrate --force &&
        echo 'Creating admin user...' &&
        php artisan tinker --execute=\"
          if (!\App\Models\Auth\User::where('email', 'admin@jirafy.com')->exists()) {
            \App\Models\Auth\User::create([
              'name' => 'Admin User',
              'email' => 'admin@jirafy.com', 
              'password' => bcrypt('admin123'),
              'email_verified_at' => now(),
              'role' => 'admin'
            ]);
            echo 'Admin user created successfully';
          }
        \" &&
        echo 'Starting Apache...' &&
        apache2-foreground
      "

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@jirafy.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - jirafy-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

networks:
  jirafy-network:
    driver: bridge

volumes:
  db_data:
  pgadmin_data:
