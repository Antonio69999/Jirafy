name: jirafy-fullstack

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jirafy
      POSTGRES_USER: jirafy_user
      POSTGRES_PASSWORD: Password1234!
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jirafy_user -d jirafy"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: antoni0699/jirafy-api:latest
    ports:
      - "8000:80"
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=jirafy
      - DB_USERNAME=jirafy_user
      - DB_PASSWORD=Password1234!
      - APP_KEY=base64:c0QPWZvC0c5ofCq2vtO8NJI4qDkacmaE4H09t3wSI5I=
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://jirafy.cda6.garage404.com
      - APP_FRONTEND_URL=https://jirafy.cda6.garage404.com
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        echo '=== Waiting for database ===' &&
        sleep 15 &&
        echo '=== Running migrations ===' &&
        php artisan migrate --force &&
        echo '=== Running admin seeder ===' &&
        php artisan db:seed --class=AdminSeeder --force &&
        echo '=== Starting Apache ===' &&
        apache2-foreground
      "

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=https://jirafy.cda6.garage404.com/api
    depends_on:
      - api
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - client
    restart: unless-stopped

volumes:
  db_data:
