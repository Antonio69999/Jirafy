name: Deploy to Runcloud

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /home/antoine/webapps/jirafy

            echo "=== Pulling latest changes ==="
            git pull origin main

            echo "=== Backend Laravel Setup ==="
            cd api
            
            # Nettoyer compl√®tement les caches Laravel
            echo "Clearing all Laravel caches..."
            php artisan cache:clear || true
            php artisan config:clear || true
            php artisan route:clear || true
            php artisan view:clear || true
            php artisan optimize:clear || true
            
            # Supprimer les fichiers de cache g√©n√©r√©s
            rm -rf bootstrap/cache/*.php || true
            rm -rf storage/framework/cache/data/* || true
            rm -rf storage/framework/sessions/* || true
            rm -rf storage/framework/views/* || true
            
            # R√©installer Composer avec cache vid√©
            echo "Reinstalling Composer dependencies..."
            composer clear-cache
            rm -rf vendor/
            composer install --no-dev --optimize-autoloader --no-interaction
            
            # Configuration Laravel
            if [ ! -f ".env" ]; then
              cp .env.example .env
              php artisan key:generate --force
            fi
            
            # V√©rifier les extensions PHP
            echo "Checking PHP extensions..."
            php -m | grep -E "(reflection|json|mbstring|openssl|pdo|tokenizer|xml)"
            
            # Optimisation Laravel
            echo "Optimizing Laravel..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # Migration (attention en production)
            php artisan migrate --force || echo "Migration skipped"

            cd ..

            echo "=== Frontend React Setup ==="
            cd client
            
            # Nettoyer le cache npm
            npm cache clean --force || true
            rm -rf node_modules/ || true
            rm -rf dist/ || true
            
            # R√©installer les d√©pendances
            npm install
            
            # Build avec gestion d'erreurs
            echo "Building React application..."
            CI=false npm run build
            
            cd ..

            echo "üéâ Deployment completed successfully!"